## when using camel with files rather than queues
#librarycloud.files.basepath=/my/base/path
## dev, qa or prod env (or custom local)
#librarycloud.sqs.environment=dev
## aws s3 buckets used for loading ingest files, passing data referenced by sqs messages through pipeline
#librarycloud.s3.marc_bucket=marc.bucket.name
#librarycloud.s3.cache_bucket=cache.bucket.name
#marc.s3.url=https://s3.amazonaws.com/marc.bucket.name
## aws credentials
#aws.access.key=foo
#aws.secret.key=bar
## librarycloud made up of 3 solr collections
#solr_url=http://localhost:8983/solr/librarycloud
#solr_holdings_url=http://localhost:3000/solr/holdings
#solr_extensions_url=http://localhost:3000/solr/extensions
## url for the collections api
#collections_url=http://localhost:8080/collections/v2
## access to collection api controlled by access key
#coll.api.key=my_collection_key
## TED collection ingest is sourced from mongo collections
#mongo.username=un
#mongo.password=pw
#mongo.host=localhost
#mongo.port=27017
#mongo.db=mydb
#mongo.collection=mycoll
## JWT Tokens used to access DRS Metadata Service
#jwt.lc.key=jwt_token_key
## Host name for DRS Metadata Services
#integration.server.url=https://drsmdsrv-dev.lib.harvard.edu
## Name of activemq broker for reading and writing messages to mq (used in some cases rather than normal SQS)
#activemq.broker.url=broker_url
#activemq.username=un
#activemq.password=pw
#activemq.clientid=My_CLIENT_ID
#coll.api.key=coll_api_key
